
1)Create/load Classlist
	Scope: Group Forming Applications	
	Primary Actor: Instructor
	Precondition: University has a database of students registered in a particular course.
	Postcondition: -
	Stakeholder and Intrests:
		- Instructor: Wants to load his classlist into the program
	Main Success Scenario:
		1. Loads project classlist.

			1.1 if no classlist exists Asks the Instructer for student database

		2. Iterate through Student Database.

			2.1 If Student does not have an object in the Classlist Array, create student object and append to array.
	 
	Extensions:
	a. At any time, System fails(To support recovery, System saves after each student object is appended)
		
	


2)Set/Edit Group Parameters
	Scope: Group Forming Applications	
	Primary Actor: Instructor
	 Precondition: -
	Postcondition: Notify that Students must fill in their information
	Stakeholder and Intrests:
		- Instructor: Wants to Set/Edit the parameters of the project
	Main Success Scenario:
		1. Asks Instructor for due date for student information.
		2. Saves Date as due date.
			2.1 If date is left empty, saves due date as CurrentDate+1000Years.
		3. Asks Instructor for Courses important to the project.
		4. Saves the course numbers to an array of courses.
			4.1 If no course is given, saves empty array.
		5. Asks Instructor for Self evaluated skills and on what scale Instructor wants the skill to be graded on.
		6. Saves name of skill & Scale an array. 
			6.1 If no skills are given, save as empty array.
		7. Asks Instructor for Group distribution method.
		8. Saves distribution method.
			8.1 If no method is given, save as no preference.
		9. Ask instructor for the max size of groups.
		10. Saves the size.
			10.1 If no size is given, saves sizes as 2.
		11. Based on the size of the class, creates a number of group objects.
		
	Extensions:
	a. At any time, System fails(To support recovery, System saves after each parameter is set)



3)Edit Student Parameters
	Scope: Group Forming Applications	
	Primary Actor: Student
	 Precondition: (Student is in the course) &&  (deadline has not been passed) && (Set/Edit Group Parameters use case has been used.) 
	Postcondition: Notify that Students has until deadline date to change anything.
	Stakeholder and Intrests:
		- Student: Wants to evaluate their skills(if any), input their personal schedule, and group preference.
	Main Success Scenario:
		1. Asks Student for their personal schedule.
		2. Adds Student Personal Schedule to their schedule.
			2.1 If nothing was added, assume the have no personal busy time.
		3. Asks Student to rate their skills(If there are any skills assigned)
		4. Saves the rating.
			4.1 If a skills rating is left blank, save lowest value on scale.
		5. Asks Student for Student preference.
		6. Saves Student preference.
		


4)Edit Groups
	Scope: Group Forming Applications	
	Primary Actor: Instructor
	Precondition: Use case 2) has been run
	Stakeholder and Intrests:
		- Instructor: Wants to specify which students are in each group.
	Main Success Scenario:
		1. Outputs current number of groups with all the students in each group, also outputs a list of all unassigned students.
		2. Asks Instructor for student and group number.
		3. If any of the below sub cases cannot be done, outputs "Cannot perform action"	
			3.1 If student in group specified, removes them from group.
			3.2 If student is not in the group specified and is also not in an assigned group, adds student to group.
			3.3 If Student is in assigned group other than the group number specified, move student from origin group to new group(If there is room)
		4. If left blank, save current group layout.
			 

 
	Extensions:
	a. At any time system fails
		(To support recovery, System logs after each completed move)
		1. Instructor restarts System
		2. System detects prior failure, and reconstructs state of groups.
		
	Special Requirements:
		- Provides both a graphical and text view.

5)Distribute Students
	Scope: Group Forming Applications	
	Primary Actor: Instructor
	Precondition: Use Case 2) has been used.
	Postcondition: Notify Instructor of any non prefered group setups(Groups with a minimum time to work or students working with people they marked as disfavorable).
	Stakeholder and Intrests:
		- Instructor: Wants to spread his classlist into groups
	Main Success Scenario:
		1. Asks Instructor if they wish to distribute students into groups.
		2. Load Distribution method.
			2.1 If Instructor says no, exits use case.
		3. Following the method of distribution, system spreads students into groups.
		4. Save groups
		
	Extensions:

	
